@use './variables.scss';
@use './mixins.scss';

.container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 1rem;
    background-color: rgba(255, 255, 255, 0.5);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 4px;
    position: relative;
  }
  
  .title {
    text-align: center;
    /* Use CSS variable for color */
    color: var(--color-primary); /* Pastel Lavender */
    font-size: 2rem;
    font-weight: bold;
  }
  
  .form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .input {
    padding: 0.75rem;
    font-size: 1rem;
    border-radius: 4px;
    font-family: var(--font-monospace);
    background-color: var(--color-button-bg);
    border: none;
  }
  
  .button {
    @include mixins.button;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }
//   .button {
//     padding: 0.75rem;
//     font-size: 1rem;
//     /* Use CSS variables for background and text color */
//     background-color: var(--color-button-bg); /* Off White / Light Gray */
//     color: var(--color-text); /* Black */
//     border: none;
//     border-radius: 4px;
//     cursor: pointer;
//     transition: background-color 0.2s ease-in-out;
//     font-family: 'Outfit', sans-serif; /* Apply Outfit font to buttons */
//   }
  
//   .button:hover {
//     background-color: var(--color-hover);
//   }
  
  .results {
    margin-top: 1rem;
    background-color: transparent;
    border: none;
    padding: 1rem;
  }
  
  .error {
    /* Use CSS variable for error color */
    color: var(--color-error);
    text-align: center;
  }
  
  .sectionHeader {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.5rem;
  }
  
  /* Replaced global h2 with local class .sectionTitle */
  .sectionTitle {
    /* Use CSS variable for color */
    color: var(--color-primary); /* Pastel Lavender */
    font-size: 1.5rem;
  }
  
  /* Replaced global pre with local class .codeBlock */
  .codeBlock {
    background-color: var(--color-button-bg); /* Consider replacing with a variable if needed */
    color: var(--color-text); /* Consider replacing with a variable if needed */
    padding: 0.5rem;
    border-radius: 4px;
    font-family: var(--font-monospace);
  }
  
  /* Overlay Styles */
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.15); // Semi-transparent gray
    z-index: 10; // Ensures the overlay is above other content
    pointer-events: all; // Blocks interactions with underlying content
    border-radius: 4px;
  }

  /* Filter Container Styles */
  .filterContainer {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .filterContainer label {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 1rem;
    color: var(--color-text);
  }

  /* Responsive Adjustments */
  @media (max-width: 600px) {
    .container {
      margin: 1rem;
      padding: 0.5rem;
    }
  }

  .loaderContainer {
    display: flex;
    margin-top: 0;
    justify-content: center;
    align-items: center;
    height: 75px;
  }
  
  /* Additional Minimalist Styles */
  /* Removed global selectors and ensured all styles are scoped */